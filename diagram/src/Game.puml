@startuml
class Game {
    + {static} height : int
    + {static} width : int
    + {static} dealer_turn : bool = false
    + {static} exitMessage : string = "You are out of money"
    + {static} dealer : Player?
    + {static} activeHand : int = 0
    + {static} playerXPosition : int
    + {static} playerYPosition : int
    + {static} AboutBlackJack : string
    + {static} BLACKJACK_BANNER : string = ""
    + Game()
    +  <<event>> GameOver : EventHandler? 
    + setGameOver() : void
    # <<virtual>> OnGameOver(e:EventArgs) : void
    + {static} onConsoleResize : bool
    + {static} LoadingIndicator(rounds:int) : void
    + {static} IntroAnimation() : void
    + {static} Setup(read_scores:bool) : void
    + {static} ProcessScores(fileName:string, read:bool) : void
    + {static} GetOrCreatePlayer(pName:string, startingBalance:double) : Player
    - {static} _SanitizeScores(player:Player) : void
    + {static} ShowAchievers() : void
    + {static} Shuffle(cards:List<Card>) : void
    + {static} PayOut(player:Player, hand:Hand, rate:double) : void
    + {static} DealRound() : void
    + {static} DoDoubleDown(player:Player) : void
    + {static} CanDoubleDown() : bool
    + {static} DrawMenu(erase:bool) : void
    + {static} ConfirmBusted() : void
    + {static} ConfirmMessage(message:string, level:ConsoleColor) : void
    + {static} TurnToDealer() : void
    + {static} DisplayPlayerMenu() : void
    + {static} DealCard(player:Player, hand:int, forDealer:bool) : void
    {static} ActiveIndicator(force_clear:bool) : void
    + {static} RenderGameInfo(erase:bool, renderDealer:bool) : void
    + {static} DoSplit(testing:bool) : void
    + {static} CanSplit() : bool
    + {static} QualifesForBlackJack() : bool
    + {static} CheckWinner() : void
    + {static} DealerBrain() : void
    + {static} ProcessBets(player:Player) : void
    + {static} GameOverHandler(sender:object, e:EventArgs) : void
    + {static} PreparePlayer() : Player
    + {static} RenderPlayerCards(player:Player) : void
    + {static} RenderDealerCards(visible:bool) : void
    + {static} MainMenu() : void
    + {static} PlayAgain() : void
}
class "List`1"<T> {
}
Game o-> "scores<(string playerName,  double balance)>" "List`1"
Game o-> "playerTimeOutSpan" TimeSpan
Game o-> "activePlayers<Player>" "List`1"
Game o-> "JackCard" Card
Game o-> "playerRoundStopWatch" Stopwatch
Game o-> "random" Random
Game o-> "deck<Card>" "List`1"
Game --> "state" State
Game --> "___" _______
Game --> "_______" _______
Game --> "_" ___
@enduml
